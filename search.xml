<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[the single most influential book]]></title>
    <url>%2F2018%2F04%2F15%2Fthe-single-most-influential-book%2F</url>
    <content type="text"><![CDATA[本文来自stackoverflow的问题，What is the single most influential book every programmer should read？每个程序员应该读的最有影响力的书，整理在这里。 Code Complete (2nd edition) by Steve McConnell The Pragmatic Programmer Structure and Interpretation of Computer Programs The C Programming Language by Kernighan and Ritchie Introduction to Algorithms by Cormen, Leiserson, Rivest &amp; Stein Design Patterns by the Gang of Four Refactoring: Improving the Design of Existing Code The Mythical Man Month The Art of Computer Programming by Donald Knuth Compilers: Principles, Techniques and Tools by Alfred V. Aho, Ravi Sethi and Jeffrey D. Ullman Gödel, Escher, Bach by Douglas Hofstadter Clean Code: A Handbook of Agile Software Craftsmanship by Robert C. Martin Effective C++ More Effective C++ CODE by Charles Petzold Programming Pearls by Jon Bentley Working Effectively with Legacy Code by Michael C. Feathers Peopleware by Demarco and Lister Coders at Work by Peter Seibel Surely You’re Joking, Mr. Feynman! Effective Java 2nd edition Patterns of Enterprise Application Architecture by Martin Fowler The Little Schemer The Seasoned Schemer Why’s (Poignant) Guide to Ruby The Inmates Are Running The Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity The Art of Unix Programming Test-Driven Development: By Example by Kent Beck Practices of an Agile Developer Don’t Make Me Think Agile Software Development, Principles, Patterns, and Practices by Robert C. Martin Domain Driven Designs by Eric Evans The Design of Everyday Things by Donald Norman Modern C++ Design by Andrei Alexandrescu Best Software Writing I by Joel Spolsky The Practice of Programming by Kernighan and Pike Pragmatic Thinking and Learning: Refactor Your Wetware by Andy Hunt Software Estimation: Demystifying the Black Art by Steve McConnel The Passionate Programmer (My Job Went To India) by Chad Fowler Hackers: Heroes of the Computer Revolution Algorithms + Data Structures = Programs Writing Solid Code JavaScript - The Good Parts Getting Real by 37 Signals Foundations of Programming by Karl Seguin Computer Graphics: Principles and Practice in C (2nd Edition) Thinking in Java by Bruce Eckel The Elements of Computing Systems Refactoring to Patterns by Joshua Kerievsky Modern Operating Systems by Andrew S. Tanenbaum The Annotated Turing Things That Make Us Smart by Donald Norman The Timeless Way of Building by Christopher Alexander The Deadline: A Novel About Project Management by Tom DeMarco The C++ Programming Language (3rd edition) by Stroustrup Patterns of Enterprise Application Architecture Computer Systems - A Programmer’s Perspective Agile Principles, Patterns, and Practices in C# by Robert C. Martin Growing Object-Oriented Software, Guided by Tests Framework Design Guidelines by Brad Abrams Object Thinking by Dr. David West Advanced Programming in the UNIX Environment by W. Richard Stevens Hackers and Painters: Big Ideas from the Computer Age The Soul of a New Machine by Tracy Kidder CLR via C# by Jeffrey Richter The Timeless Way of Building by Christopher Alexander Design Patterns in C# by Steve Metsker Alice in Wonderland by Lewis Carol Zen and the Art of Motorcycle Maintenance by Robert M. Pirsig About Face - The Essentials of Interaction Design Here Comes Everybody: The Power of Organizing Without Organizations by Clay Shirky The Tao of Programming Computational Beauty of Nature Writing Solid Code by Steve Maguire Philip and Alex’s Guide to Web Publishing Object-Oriented Analysis and Design with Applications by Grady Booch Effective Java by Joshua Bloch Computability by N. J. Cutland Masterminds of Programming The Tao Te Ching The Productive Programmer The Art of Deception by Kevin Mitnick The Career Programmer: Guerilla Tactics for an Imperfect World by Christopher Duncan Paradigms of Artificial Intelligence Programming: Case studies in Common Lisp Masters of Doom Pragmatic Unit Testing in C# with NUnit by Andy Hunt and Dave Thomas with Matt Hargett How To Solve It by George Polya The Alchemist by Paulo Coelho Smalltalk-80: The Language and its Implementation Writing Secure Code (2nd Edition) by Michael Howard Introduction to Functional Programming by Philip Wadler and Richard Bird No Bugs! by David Thielen Rework by Jason Freid and DHH JUnit in Action]]></content>
      <categories>
        <category>Book</category>
      </categories>
      <tags>
        <tag>Book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL主从复制与主主复制]]></title>
    <url>%2F2018%2F04%2F02%2Fmysql%E4%B8%BB%E4%B8%BB%E5%92%8C%E4%B8%BB%E4%BB%8E%2F</url>
    <content type="text"><![CDATA[mysql主从复制和主主复制的技术已经算是比较成熟了https://www.cnblogs.com/phpstudy2015-6/p/6485819.html]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用ssh-copy-id将ssh-key复制到远程主机实现免密登录]]></title>
    <url>%2F2018%2F03%2F29%2Fssh-copy-id%2F</url>
    <content type="text"><![CDATA[运行命令ssh-copy-id user@server，按照提示输入自己的登录密码，马上就会提示你登录，就可以了]]></content>
      <categories>
        <category>SSH</category>
      </categories>
      <tags>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[本地配置多个ssh-key]]></title>
    <url>%2F2018%2F03%2F15%2Fconfigure-multiple-ssh-key%2F</url>
    <content type="text"><![CDATA[访问公司的服务器已经生成了ssh-key,再访问GitHub的git版本库时，还要需要生成不同的ssh-key1$ ssh-keygen -t rsa -C "youremail@yourcompany.com" 回车执行后，修改生成文件的路径或者文件名，然后在文件里~/.ssh/config 配置不同域名的ssh-key文件,比如我的Github配置12345Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_github%]]></content>
      <categories>
        <category>SSH</category>
      </categories>
      <tags>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Hexo生成静态博客]]></title>
    <url>%2F2018%2F02%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[虽然一名PHP程序员，但是觉得node + npm + github的工具特别好用，所有用Hexo框架来生成一个纯静态博客站。这里是整理hexo框架搭建后的常用命令及其说明。 新建文章文件1$ hexo n "my article" #完整命令为hexo new,新建一篇名为“my article”的文章 开启本地webserver服务1$ hexo s #完整命令为hexo server,启动本地webserver服务 清除生成的本地静态文件1$ hexo clean #清除生成的本地静态文件 生成静态文件1$ hexo g #完整命令为hexo generate,用于生成静态文件 上传到远程站点1$ hexo d #完整命令为hexo deploy,用于将本地文件发布到远程仓库]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
